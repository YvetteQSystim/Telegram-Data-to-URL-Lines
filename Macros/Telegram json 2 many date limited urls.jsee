#include "common.js"
// 导入公共函数定义

// ------------------------------------------------------------------------------------------------

// 🪴  0  使用场景说明

// ------------------------------------------------------------------------------------------------

// 数据输入：从 Telegram 群聊/频道中导出的 .json 格式的数据
// 数据输出：筛选过后得到的网址文本行
// 数据特征：Telegram 群聊/频道的 .json 格式导出的数据

// ------------------------------------------------------------------------------------------------

// 🪴  1  筛选需要的参数信息

// 😇其实只需要含有网址的文本行，🤔但是有时间范围限制，因此还需要加上 "date" 参数文本行
// 最好不要在编辑（比如覆盖）原文本的内容，方便测试宏命令文件。

Extract_Lines("Regex", "(\"date\": |https://)");		// 正则提取 "date" 参数和网址所在的文本行
Delete_Indent();										// 取消缩进

// ------------------------------------------------------------------------------------------------

// 🪴  2  筛选年度消息

Replace_Words("Regex", "\\n((?!\\\"date).)", "\\1");    // 删除除了 "date" 参数前面的其余所有换行符
// 这样含有网址的文本行，就是以网址相应的 "date" 参数开头
Extract_Lines("Normal", "https://");                    // 提取有网址的文本行
Extract_Lines("Normal", "date\": \"2022");              // 再提取 2022 年消息👈👈在此处修改时间范围

// ------------------------------------------------------------------------------------------------

// 🪴  3  从文本行中提取网址 - 掐头去尾

Extract_URLs_From_Lines();								// 直接将网址从文本行中提取出来，然后覆盖已有的文本

// ------------------------------------------------------------------------------------------------

// 🪴  4  删除中文 & 网址黑名单

Delete_Lines("Regex", "[^\\x00-\\xff]");				// 删除中文，确实可以另存中文，但是感觉不如直接删掉
Delete_Blacklist();										// 网址黑名单

// ------------------------------------------------------------------------------------------------

// 🪴  5  删除网址内部的定位信息

Delete_Parameters_And_Anchors();						// 删除网址内部的参数和锚点
Clean_Text();											// 删除重复行，按字母排序

// ------------------------------------------------------------------------------------------------

// 最终会生成很多文件，最后一个文件保留，其余中间文件删除
