// 🪴  0  本宏命令文件使用说明 & 函数定义

// 数据输入：从 Telegram 群聊/频道中导出的 .json 格式的数据
// 数据输出：
// CN.txt		倒数第一个文件		一行包含一个网址和一些中文字符（很常见）	直接保存
// EN.txt		倒数第二个文件		一行包含一个网址和一些英文字符（很少见）	处于筛选状态，删掉筛选的内容和筛选栏的内容，然后保存
// 其余文件		可以直接删掉不保存

// ------------------------------------------------------------------------------------------------

// 如何使用：
// 本宏命令文件更适合处理大数据文件。
// 用 EmEditor 打开数据文件，选中宏，运行宏。
// 对于单个群聊/频道消息，直接运行宏。
// 对于多个群聊/频道消息，建议先合并数据文件之后再运行宏。

// ------------------------------------------------------------------------------------------------

// 🔴强烈建议在：工具（Alt + T）》自定义（C）》编辑
// 👉取消勾选【当没有可用的撤消信息时进行提示】，以加快执行速度
// 👉勾选【总是丢弃过长的撤消信息来加速】，以加快执行速度

// ------------------------------------------------------------------------------------------------

// 🔴不要勾选【使用 V8 作为 JavaScript 引擎】
// 👉目前，使用 V8 作为 JavaScript 引擎选项默认处于关闭状态，这是因为它与旧的 JScript 宏存在一些不兼容问题。
// 官网说明🔗https://zh-cn.emeditor.com/emeditor-core/emeditor-v22-1-0-released-including-technical-review/
// 相关讨论🔗https://stackoverflow.com/questions/75431535/in-checking-use-v8-as-javascript-engine-condition-some-macros-recorded-in-the

// ------------------------------------------------------------------------------------------------

// 用到的宏方法的说明官方详细说明
// document.DeleteDuplicates			👉🔗https://www.emeditor.org/zh-cn/macro_document_delete_duplicates.html
// document.Filter						👉🔗https://www.emeditor.org/zh-cn/macro_document_filter.html
// document.selection.DeleteLeft		👉🔗https://www.emeditor.org/zh-cn/macro_selection_selection_deleteleft.html
// document.selection.Paste				👉🔗https://www.emeditor.org/zh-cn/macro_selection_selection_paste.html
// document.selection.Replace			👉🔗https://www.emeditor.org/zh-cn/macro_selection_selection_replace.html
// document.selection.SelectAll			👉🔗https://www.emeditor.org/zh-cn/macro_selection_selection_selectall.html
// editor.ExecuteCommandByID			👉🔗https://www.emeditor.org/zh-cn/macro_editor_editor_executecommandbyid.html

// ------------------------------------------------------------------------------------------------

// 函数定义
// 🤔常用到的操作无非是普通模式和正则模式，因此分类定义同类操作的函数也不是不行

// 普通匹配删除文本行，不区分大小写
function Normal_Delete(strFilter) {
    document.Filter(strFilter, 0, 0, 0, 0, 0, 0, 0);						// 普通匹配👈
    document.selection.SelectAll();											// 全选
    document.selection.DeleteLeft(1);										// 删除
}

// 正则匹配删除文本行，不区分大小写
function Regex_Delete(strFilter) {
    document.Filter(strFilter, 0, eeFindReplaceRegExp, 0, 0, 0, 0, 0);		// 正则匹配👈
    document.selection.SelectAll();											// 全选
    document.selection.DeleteLeft(1);										// 删除
}

// ------------------------------------------------------------------------------------------------

// 普通提取文本行
function Normal_Extract(strFilter) {
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter("",0,0,0,0,0,-1,-1);									// 清空筛选工具栏中的内容
	document.Filter(strFilter, 0, 0, 0, 0, 0, 0, 0);						// 普通匹配👈
	editor.ExecuteCommandByID(3928);										// 提取所有行
	
}

// 正则提取文本行
function Regex_Extract(strFilter) {
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter("",0,0,0,0,0,-1,-1);									// 清空筛选工具栏中的内容
	document.Filter(strFilter, 0, eeFindReplaceRegExp, 0, 0, 0, 0, 0);		// 正则匹配👈
	editor.ExecuteCommandByID(3928);										// 提取所有行
}

// ------------------------------------------------------------------------------------------------

// 普通覆盖
function Normal_Overlay(strFilter) {
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter(strFilter, 0, 0, 0, 0, 0, 0, 0);						// 普通匹配👈
	document.selection.SelectAll();											// 全选
	document.selection.Cut();												// 剪切
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter("", 0, 0, 0, 0, 0, -1, -1);								// 清空筛选工具栏中的内容
	document.selection.SelectAll();											// 全选
	document.selection.Paste(eeCopyUnicode);								// 粘贴覆盖
}

// 正则覆盖
function Regex_Overlay(strFilter) {
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter(strFilter, 0, eeFindReplaceRegExp, 0, 0, 0, 0, 0);		// 正则匹配👈
	document.selection.SelectAll();											// 全选
	document.selection.Cut();												// 剪切
	editor.ExecuteCommandByID(3912);										// 将焦点设置在筛选工具栏
	document.Filter("", 0, 0, 0, 0, 0, -1, -1);								// 清空筛选工具栏中的内容
	document.selection.SelectAll();											// 全选
	document.selection.Paste(eeCopyUnicode);								// 粘贴覆盖
}

// ------------------------------------------------------------------------------------------------

// 普通替换
function Normal_Replace(strFind, strReplace) {
	document.selection.Replace(strFind, strReplace, eeReplaceAll, 0);							// 普通替换👈
}

// 正则替换
function Regex_Replace(strFind, strReplace) {
	document.selection.Replace(strFind, strReplace, eeReplaceAll | eeFindReplaceRegExp, 0);		// 正则替换👈
}

// ------------------------------------------------------------------------------------------------

// 格式处理
function Clean() {
	document.DeleteDuplicates("", 0);										// 删除重复行
	editor.ExecuteCommandByID(4477);										// 按字母升序排序
}

// ------------------------------------------------------------------------------------------------

// 🤔需要说明的是，提取筛选内容对于大文件效率更快，对于小文件可以使用覆盖操作，即
// Normal_Extract() 函数和 Regex_Extract() 函数更适合大数据文件
// Normal_Overlay() 函数和 Regex_Overlay() 函数更适合小数据文件
// 本宏命令文件针对大数据文件，对于小文件（或者单个文件），只需将 Normal_Extract() 改为使用 Normal_Overlay() ，以及 Regex_Extract() 改为使用 Regex_Overlay() 即可。

// ------------------------------------------------------------------------------------------------

// 🪴  1  筛选需要的参数信息

// 😇其实只需要含有网址的文本行，🤔但是有时间限制，因此还需要加上 "date" 参数文本行

Regex_Extract("(\\\"date\\\"|https:\\/\\/)");			// 正则提取 "date" 参数和网址所在的文本行
document.selection.SelectAll();							// 全选
document.selection.UnIndent();							// 取消缩进

// ------------------------------------------------------------------------------------------------

// 🪴  2  筛选年度消息

Regex_Replace("\\n((?!\\\"date).)","\\1");				// 删除除了 "date" 参数前面的其余所有换行符，这样含有网址的文本行，就是以网址相应的 "date" 参数开头
Normal_Extract("https://");								// 提取有网址的文本行
Normal_Extract("date\": \"2023-01");					// 再提取 2023 年 1 月消息

// ------------------------------------------------------------------------------------------------

// 🪴  3  把网址从文本行中提取出来 - 掐头去尾

// 处理头部，在网址前面加上换行
Regex_Replace("http","\\nhttp");						// 网址前面加上换行
Normal_Extract("https://");								// 提取有网址的文本行

// 处理尾部，统一使用正则替换为换行符
// 🤔有很多网址，内容指向相同但是尾部的非必要符号会有不同，因此尾部处理掉很必要
// 👉对于不可能出现在网址中的字符，可以不用多匹配一个换行符表示只匹配尾部，即直接将这个字符替换为换行符
Regex_Replace(" ", "\\n");								// 空格
Regex_Replace("\\|", "\\n");							// 竖线
Regex_Replace(",", "\\n");								// 英文逗号
Regex_Replace(";", "\\n");								// 英文分号
Regex_Replace("\"", "\\n");								// 英文引号
Regex_Replace("\\(", "\\n");							// 英文左小括号
Regex_Replace("\\)", "\\n");							// 英文右小括号
Regex_Replace("\\[", "\\n");							// 英文左中括号
Regex_Replace("\\]", "\\n");							// 英文右中括号
Regex_Replace("{", "\\n");								// 英文左大括号
Regex_Replace("}", "\\n");								// 英文右大括号
// 👉对于有可能出现在网址中的字符，则需要多匹配一个换行符表示只匹配尾部
Regex_Replace("@\\n", "\\n");							// 结尾的@
Regex_Replace("\\.\\n", "\\n");							// 英文句号
Regex_Replace("\\\\\n", "\\n");							// \
Regex_Replace("/\\n", "\\n");							// /
Regex_Replace("#\\n", "\\n");							// #

Normal_Extract("https://");								// 提取有网址的文本行
Clean();												// 删除重复行，按字母排序
// Clean(); 这行代码放在提取最后一部分的第一句位置其实是可以的，但是实际操作显示并没有执行此行代码，有点奇怪。🤔🤔
// 不过 Clean(); 这句代码放在网址黑名单前面执行也可以减轻后续的 Normal_Delete() 的工作量（此时文本有序了）

// ------------------------------------------------------------------------------------------------

// 🪴  4  网址黑名单

// ------------------------------------------------------------------------------------------------

// 不想消费

// 1 电商平台✅
// 资料参考：全球主流跨境电商平台汇总（超全）🔗https://zhuanlan.zhihu.com/p/411087832

Normal_Delete("jd");									// 京东
Normal_Delete("taobao");								// 淘宝
Normal_Delete("meituan");								// 美团
Normal_Delete("goofish");								// 咸鱼
Normal_Delete("pinduoduo");								// 拼多多
Normal_Delete("jinritemai");							// 抖店
Normal_Delete("douyin");								// 抖音
Normal_Delete("suning");								// 苏宁易购
Normal_Delete("dangdang");								// 当当
Normal_Delete("amazon");								// Amazon
Normal_Delete("ebay");									// eBay
Normal_Delete("aliexpress");							// 速卖通
Normal_Delete("walmart");								// 沃尔玛

// 2 手机为代表的移动端
// 👉👉苹果公司相关服务
Normal_Delete("apple");									// 
Normal_Delete("iphone");								// 
Normal_Delete("ipad");									// 
Normal_Delete("airpod");								// 
Normal_Delete("icloud");								// 
Normal_Delete("imac");									// 这里使用 imac 可以是可以，但是很容易误杀一些别的网站，因为 imac 这个词可以在别的词中出现
Normal_Delete("eclecticlight");							// 和苹果公司相关的网站，页面设计和艺术水平很高，但是对我来说并不重要
Normal_Delete("9to5mac");								// 苹果公司相关新闻推送
Normal_Delete("macrumors");								// 苹果公司相关新闻推送
Normal_Delete("macstories");							// 苹果产品相关资讯
// 👉👉谷歌公司相关服务
Normal_Delete("google");								// 
Normal_Delete("9to5google");							// 
Normal_Delete("play.google");							// 
Normal_Delete("android");								// 
Normal_Delete("f-droid.org");							// 
// 👉👉别的一些手机产品
Normal_Delete("moblie");								// 单纯的手机网站
Normal_Delete("samsung");								// 三星
Normal_Delete("sammobile");								// 三星
Normal_Delete("oneplus");								// 一加
Normal_Delete("oppo");									// OPPO
Normal_Delete("vivo");									// VIVO
Normal_Delete("hihonor");								// 荣耀
Normal_Delete("meizu");									// 魅族
Normal_Delete("huawei.com");							// 华为，但是我同时想要保留华为云服务

// 3 流媒体 | 泛用性客户端
Regex_Delete("//((?!mp\\.weixin).)*\\.qq\\.com");		// 腾讯，同时保留微信公众号文章

Normal_Delete("netflix");								// Netflix
Normal_Delete("disney");								// Disney
Normal_Delete("kuaishou");								// 快手
Normal_Delete("douyu");									// 斗鱼
Normal_Delete("sina");									// 新浪
Normal_Delete("weibo");									// 微博
Normal_Delete("facebook");								// Facebook
Normal_Delete("ghxi.com");								// 果核剥壳
Normal_Delete("hupu");									// 虎扑
Normal_Delete("xiaoyuzhoufm");							// 小宇宙
Normal_Delete("instagram");								// Instagram
Normal_Delete("tiktok");								// TikTok

// 4 网课 | 知识付费 | 硬件付费
Normal_Delete("dji.com");								// 大疆
Normal_Delete("coding.imooc.com");						// 慕课网
Normal_Delete("cloud");									// 云服务
Normal_Delete("acwing");								// 这个一般是组团买课链接
Normal_Delete("smzdm.com");								// 什么值得买网站
Normal_Delete("zhaniker.zom");							// 
Normal_Delete("chongdiantou.com");						// 
Normal_Delete("chinese.engadget.com");					//

// ------------------------------------------------------------------------------------------------

// 我不需要的网址 | 低质量网站 | 我不爱看的网站 | 游戏类网站 | 记录别人数据的网站

Normal_Delete("speedtest");								// 测速工具，我暂时不需要
Normal_Delete("imgur.com");								// 截图保存网站，我不需要
Normal_Delete("lrepacks.net");							// 俄文，看不懂
Normal_Delete("iois.me");								// 我没有订阅他们的 NewsLetter
Normal_Delete("://paste");								// 代码片段托管
Normal_Delete("pixiv.net");								// pixiv
Normal_Delete("fishpi.cn");								// 这个论坛网站感觉不怎么样
Normal_Delete("ruike1.com");							// 这个论坛网站感觉也是不怎么样
Normal_Delete("zoom.us");								// Zoom
Normal_Delete("epicgames");								// Epic Game
Normal_Delete("ldqk.xyz");								// 这个群聊的信息不要加入
Normal_Delete("douban");								// 豆瓣
Normal_Delete("live.bilibili.com");						// B站直播 🔴需要把别的的直播源给加上，比如央视的
Normal_Delete("space.bilibili.com");					// B站相关 🤔我其实在想，到底要不要放弃 B站 ?
Normal_Delete("steampowered");							// 游戏
Normal_Delete("tzsucai.com");							// 这个是素材网站，我暂时不需要
Normal_Delete("game");									// 
Normal_Delete("spendtest.net");							// 
Normal_Delete("store.steampowered.com");				// 
Normal_Delete("kuaizhan");								// 快赞
Normal_Delete("nhentai.net");							// 色色的东西
Normal_Delete("xbox.com");								// Xbox 游戏

// 适合主动搜索而不是被动吸收内容的网站
Normal_Delete("52pojie.cn");							// 52 破解 容易出现 too many request 的问题，有需求再去了解吧。
Normal_Delete("fars.ee");								// 
Normal_Delete("ithome");								// IT 之家
Normal_Delete("wiki");									// Wiki
Normal_Delete("en.cppreference.com");					// 当你知道 cppreference 怎么使用之后，主动打开最好。
Normal_Delete("v2ex.com");								// 
Normal_Delete("sohu.com");								// 搜狐
Normal_Delete("ahhhhfs.com");							// 一个个人资源站点
Normal_Delete("bugs.");									// bugs 🔴这个关键词我还是需要去确认一下

// 网盘类 | 下载类
Normal_Delete("baidu");									// 百度
Normal_Delete("163.com");								// 163 网盘
Normal_Delete("download.csdn.net");						// csdn资料下载，csdn 还不至于到所有的内容都是垃圾
Normal_Delete("123pan.com");							// 123 网盘，质量一般
Normal_Delete("lanzou");								// 蓝奏网盘
Normal_Delete("yunpanziyuan.com");						// 
Normal_Delete("ziyuanluntan.com");						// 
Normal_Delete("yunpanziyuan.com");						//

// 报纸类 | 新闻类
// 有些报纸的订阅制对于目前的我来说不适用，有些报纸我没有想过养成习惯去看
Normal_Delete("news.");									// 新闻
Normal_Delete("zaobao");								// 早报
Normal_Delete("bloomberg.com");							// 彭博社
Normal_Delete("cn.nikkei.com");							// 日本经济新闻中文版
Normal_Delete("cn.yna.co.kr");							// 韩联社
Normal_Delete("fortune.com");							// 这个报纸内容可以免费看，但是我不想看
Normal_Delete("ftchinese.com");							// FT 中文网
Normal_Delete("nytimes.com");							// New York Times
Normal_Delete("wsj.com");								// 华尔街日报
Normal_Delete("edition.cnn");							// CNN
Normal_Delete("jiemian.com");							// 界面新闻
Normal_Delete("wallstreetcn.com");						// 
Normal_Delete("bbc.com");								// BBC
Normal_Delete("reuters.com");							// 路透社

// 打不开的网址
Normal_Delete("archive.org");							// 
Normal_Delete("cnbeta.com");							// cnbeta 已经寄了
Normal_Delete("fuqing.ch");								// 
Normal_Delete("gg0.net");								// 
Normal_Delete("jikipedia.com");							// 小鸡词典已经寄了
Normal_Delete("macsofter");								// 
Normal_Delete("pozou");									// 
Normal_Delete("racknerd");								// 
Normal_Delete("tategaki.de");							// 
Normal_Delete("thepaper.cnewsDetail");					// cnbeta 已经寄了
Normal_Delete("vmovier.com");							// 
Normal_Delete("youpanso");								// 
Normal_Delete("ip.jiangxianli.com");					// 危险网站

// 手机端链接
Normal_Delete("//m.");									// 这里一定要加上 "/" ，要区别 com 和 medium 等单词
Normal_Delete("mobile");								// 

// 🔴🔴🔴🔴待整理的网站
Normal_Delete("oiloil.lan");							// 
Normal_Delete("noisevip.cn");							// 
Normal_Delete("money.udn.com");							// 
Normal_Delete("vipc6.com");								// 
Normal_Delete("videogameschronicle.com");				// 
Normal_Delete("vgtime.com");							// 
Normal_Delete("toptal.com");							// 
Normal_Delete("rfi.fr");								// 
Normal_Delete("gsnew.com");								// 看电影的
Normal_Delete("3c.ltn.com");							// 
Normal_Delete("3g.china.com");							// 
Normal_Delete("115.com");								// 
Normal_Delete("bbs.fuyuan6.com");						// 
Normal_Delete("hostloc.com");							// 
Normal_Delete("godbolt.org");							// 
Normal_Delete("423down.com");							// 
Normal_Delete("zxxk.com");								// 
Normal_Delete("1point3acres.com");						// 
Normal_Delete("58pic.com");								// 
Normal_Delete("cgown.com");								// 
Normal_Delete("cool3c.com");							// 
Normal_Delete("dianbo.org");							// 
Normal_Delete("fjhn.net");								// 
Normal_Delete("ft.nom");								// 
Normal_Delete("phononix.com");							// 
Normal_Delete("scmn.com");								// 
Normal_Delete("tzsncai.com");							// 
Normal_Delete("vmonier.com");							// 
Normal_Delete("ypsnare.com");							// 
Normal_Delete("zndn.com");								// 
Normal_Delete("fjha.net");								// 

// ------------------------------------------------------------------------------------------------

// 高深的内容 | 技术相关但是细枝末节的内容 等等

// RSS 相关
Normal_Delete("rsshub.app");							// 
Normal_Delete("/feed");									// 
Normal_Delete("/atom");									// 
Normal_Delete(".atom");									// 

// Github 相关
Normal_Delete("/compare/");								// 
Normal_Delete("/commit/");								// 
Normal_Delete("/issues/");								// 
Normal_Delete("/pull/");								// 
Normal_Delete("/releases/");							// 
Normal_Delete("/discussions/");							// 

// Telegram 相关
Normal_Delete("t.me/addtheme");							// 界面主题
Normal_Delete("t.me/addstickers");						// 贴纸
Normal_Delete("t.me/addemoji");							// 表情包
Normal_Delete("t.me/setlanguage");						// 语言
Normal_Delete("t.me/proxy?server=");					// 这个和代理相关
Normal_Delete("t.me/socks?server=");					// 这个和代理相关

// 代理相关
Normal_Delete("v1.mk");									// 节点相关
Normal_Delete("://xn");									// 一元机场
Normal_Delete("vps");									// vps

// Matlab 相关
Normal_Delete("matlab");								// 
Normal_Delete("mathworks");								// 其实主要是下面的 ww2.mathworks.cn 
Normal_Delete("ww2.mathworks.cn");						// 相关网站

// Linux 相关
// 我目前是在 WSL2 上安装 Ubuntu-22.04 来完成日常的一些工作，是 Linux 新手
Normal_Delete("macOS");									// MacOS
Normal_Delete("archlinux");								// Arch Linux
Normal_Delete("redhat");								// RedHat
Normal_Delete("mozilla");								// 火狐
Normal_Delete("firefox");								// 火狐
Normal_Delete("gentoo");								// Gentoo

// ------------------------------------------------------------------------------------------------

// 不想下载文件链接
// 🔴🔴🔴🔴这一块其实还是搞成正则表达式会比较精确一些
// 常见文件格式参考：https://docs-cn.eagle.cool/article/18-what-file-formats-does-eagle-support?categoryId=5-category
// 图片
Normal_Delete(".avif");									// 
Normal_Delete(".base64");								// 
Normal_Delete(".bmp");									// 
Normal_Delete(".eps");									// 
Normal_Delete(".gif");									// 
Normal_Delete(".heic");									// 
Normal_Delete(".heif");									// 
Normal_Delete(".hif");									// 
Normal_Delete(".icns");									// 
Normal_Delete(".ico");									// 
Normal_Delete(".insp");									// 
Normal_Delete(".jfif");									// 
Normal_Delete(".jpe");									// 
Normal_Delete(".jpeg");									// 
Normal_Delete(".jpg");									// 
Normal_Delete(".jxl");									// 
Normal_Delete(".png");									// 
Normal_Delete(".svg");									// 
Normal_Delete(".tif");									// 
Normal_Delete(".tiff");									// 
Normal_Delete(".ttf");									// 
Normal_Delete(".webp");									// 
// 3D
Normal_Delete(".3ds");									// 
Normal_Delete(".3mf");									// 
Normal_Delete(".blender");								// 
Normal_Delete(".dae");									// 
Normal_Delete(".fbx");									// 
Normal_Delete(".glb");									// 
Normal_Delete(".ifc");									// 
Normal_Delete(".obj");									// 
Normal_Delete(".ply");									// 
Normal_Delete(".stl");									// 
// 贴图
Normal_Delete(".dds");									// 
Normal_Delete(".exr");									// 
Normal_Delete(".hdr");									// 
Normal_Delete(".tga");									// 
// 源文件
Normal_Delete(".Principle");							// 
Normal_Delete(".afdesign");								// 
Normal_Delete(".afphoto");								// 
Normal_Delete(".afpub");								// 
Normal_Delete(".ai");									// 
Normal_Delete(".c4d");									// 
Normal_Delete(".cdr");									// 
Normal_Delete(".clip");									// 
Normal_Delete(".dwg");									// 
Normal_Delete(".fig");									// 
Normal_Delete(".graffle");								// 
Normal_Delete(".idml");									// 
Normal_Delete(".indd");									// 
Normal_Delete(".indt");									// 
Normal_Delete(".mindnode");								// 
Normal_Delete(".psb");									// 
Normal_Delete(".psd");									// 
Normal_Delete(".psdt");									// 
Normal_Delete(".pxd");									// 
Normal_Delete(".sketch");								// 
Normal_Delete(".skp");									// 
Normal_Delete(".skt");									// 
Normal_Delete(".xd");									// 
Normal_Delete(".xmind");								// 
// 视频
Normal_Delete(".avi");									// 
Normal_Delete(".m4v");									// 
Normal_Delete(".mov");									// 
Normal_Delete(".mp4");									// 
Normal_Delete(".mpg");									// 
Normal_Delete(".webm");									// 
Normal_Delete(".wmv");									// 
// 音频
Normal_Delete(".aac");									// 
Normal_Delete(".flac");									// 
Normal_Delete(".m4a");									// 
Normal_Delete(".mp3");									// 
Normal_Delete(".ogg");									// 
Normal_Delete(".wav");									// 
// 字体
Normal_Delete(".otf");									// 
Normal_Delete(".ttc");									// 
Normal_Delete(".ttf");									// 
Normal_Delete(".woff");									// 
// RAW
Normal_Delete(".3fr");									// 
Normal_Delete(".arw");									// 
Normal_Delete(".cr2");									// 
Normal_Delete(".cr3");									// 
Normal_Delete(".crw");									// 
Normal_Delete(".dng");									// 
Normal_Delete(".erf");									// 
Normal_Delete(".mrw");									// 
Normal_Delete(".nef");									// 
Normal_Delete(".nrw");									// 
Normal_Delete(".orf");									// 
Normal_Delete(".otf");									// 
Normal_Delete(".pef");									// 
Normal_Delete(".raf");									// 
Normal_Delete(".raw");									// 
Normal_Delete(".rw2");									// 
Normal_Delete(".sr2");									// 
Normal_Delete(".srw");									// 
Normal_Delete(".x3f");									// 
// 办公
Normal_Delete(".doc");									// 
Normal_Delete(".docx");									// 
Normal_Delete(".eddx");									// 
Normal_Delete(".emmx");									// 
Normal_Delete(".key");									// 
Normal_Delete(".numbers");								// 
Normal_Delete(".pages");								// 
// Normal_Delete(".pdf");								// PDF 文件应当保留查看
Normal_Delete(".potx");									// 
Normal_Delete(".ppt");									// 
Normal_Delete(".pptx");									// 
Normal_Delete(".txt");									// 
Normal_Delete(".xls");									// 
Normal_Delete(".xlsx");									// 
// (+)压缩包
Normal_Delete(".7z");									// 
Normal_Delete(".apk");									// 
Normal_Delete(".dmg");									// 
Normal_Delete(".exe");									// 
Normal_Delete(".gz");									// 
Normal_Delete(".rar");									// 
Normal_Delete(".tgz");									// 
Normal_Delete(".zip");									// 
// (+)别的格式
Normal_Delete(".bin");									// 
Normal_Delete(".deb");									// 
Normal_Delete(".sh");									// 
Normal_Delete(".txt");									// 
Normal_Delete(".yaml");									// 
Normal_Delete(".api");									// 
Normal_Delete(".msi");									//

// ------------------------------------------------------------------------------------------------

// 🪴  5  分离中文

Regex_Extract("[^\\x00-\\xff]");						// 提取含有中文的文本行
editor.ExecuteCommandByID(4099);						// 保存

// 执行完这个宏命令文件之后：
// 👉保存倒数第一个文件，可以另存为 CN.txt；
// 👉倒数第二个文件应该还处于筛选状态，删除筛选内容，再删除筛选栏中的内容，另存为 EN.txt；
// 👉其余的文件是中间文件，可以直接删除。